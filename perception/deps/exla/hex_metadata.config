{<<"links">>,[{<<"GitHub">>,<<"https://github.com/elixir-nx/nx">>}]}.
{<<"name">>,<<"exla">>}.
{<<"version">>,<<"0.9.2">>}.
{<<"description">>,
 <<"Google's XLA (Accelerated Linear Algebra) compiler/backend for Nx">>}.
{<<"elixir">>,<<"~> 1.15">>}.
{<<"app">>,<<"exla">>}.
{<<"licenses">>,[<<"Apache-2.0">>]}.
{<<"files">>,
 [<<"lib">>,<<"lib/exla.ex">>,<<"lib/exla">>,<<"lib/exla/client.ex">>,
  <<"lib/exla/logger.ex">>,<<"lib/exla/binary_buffer.ex">>,
  <<"lib/exla/backend.ex">>,<<"lib/exla/defn.ex">>,<<"lib/exla/lib.ex">>,
  <<"lib/exla/mlir">>,<<"lib/exla/mlir/region.ex">>,
  <<"lib/exla/mlir/context_pool.ex">>,<<"lib/exla/mlir/module.ex">>,
  <<"lib/exla/mlir/value.ex">>,<<"lib/exla/mlir/function.ex">>,
  <<"lib/exla/typespec.ex">>,<<"lib/exla/device_buffer.ex">>,
  <<"lib/exla/nif.ex">>,<<"lib/exla/application.ex">>,
  <<"lib/exla/executable.ex">>,<<"lib/exla/defn">>,
  <<"lib/exla/defn/stream.ex">>,<<"lib/exla/defn/runner.ex">>,
  <<"lib/exla/defn/disk.ex">>,<<"lib/exla/defn/locked_cache.ex">>,
  <<"lib/exla/defn/buffers.ex">>,<<"lib/exla/defn/lock.ex">>,
  <<"lib/exla/defn/outfeed.ex">>,<<".formatter.exs">>,<<"mix.exs">>,
  <<"README.md">>,<<"LICENSE">>,<<"CHANGELOG.md">>,<<"c_src">>,
  <<"c_src/exla">>,<<"c_src/exla/exla_cuda.h">>,<<"c_src/exla/ipc.h">>,
  <<"c_src/exla/exla_nif_util.cc">>,<<"c_src/exla/exla_log_sink.h">>,
  <<"c_src/exla/custom_calls">>,<<"c_src/exla/custom_calls/lu.h">>,
  <<"c_src/exla/custom_calls/qr.h">>,<<"c_src/exla/custom_calls/lu_f64.cc">>,
  <<"c_src/exla/custom_calls/eigh_f32.cc">>,
  <<"c_src/exla/custom_calls/qr_f32.cc">>,
  <<"c_src/exla/custom_calls/qr_f16.cc">>,
  <<"c_src/exla/custom_calls/qr_f64.cc">>,
  <<"c_src/exla/custom_calls/eigh.h">>,
  <<"c_src/exla/custom_calls/qr_bf16.cc">>,
  <<"c_src/exla/custom_calls/lu_f32.cc">>,
  <<"c_src/exla/custom_calls/lu_bf16.cc">>,
  <<"c_src/exla/custom_calls/eigh_f64.cc">>,
  <<"c_src/exla/custom_calls/lu_f16.cc">>,<<"c_src/exla/exla_mlir.h">>,
  <<"c_src/exla/exla.cc">>,<<"c_src/exla/exla_mlir.cc">>,
  <<"c_src/exla/ipc.cc">>,<<"c_src/exla/exla_types.h">>,
  <<"c_src/exla/exla_client.h">>,<<"c_src/exla/exla_client.cc">>,
  <<"c_src/exla/exla_cuda.cc">>,<<"c_src/exla/exla_nif_util.h">>,
  <<"c_src/exla/custom_calls.cc">>,<<"Makefile">>]}.
{<<"requirements">>,
 [[{<<"name">>,<<"nx">>},
   {<<"app">>,<<"nx">>},
   {<<"optional">>,false},
   {<<"requirement">>,<<"~> 0.9.0">>},
   {<<"repository">>,<<"hexpm">>}],
  [{<<"name">>,<<"telemetry">>},
   {<<"app">>,<<"telemetry">>},
   {<<"optional">>,false},
   {<<"requirement">>,<<"~> 0.4.0 or ~> 1.0">>},
   {<<"repository">>,<<"hexpm">>}],
  [{<<"name">>,<<"xla">>},
   {<<"app">>,<<"xla">>},
   {<<"optional">>,false},
   {<<"requirement">>,<<"~> 0.8.0">>},
   {<<"repository">>,<<"hexpm">>}],
  [{<<"name">>,<<"elixir_make">>},
   {<<"app">>,<<"elixir_make">>},
   {<<"optional">>,false},
   {<<"requirement">>,<<"~> 0.6">>},
   {<<"repository">>,<<"hexpm">>}],
  [{<<"name">>,<<"nimble_pool">>},
   {<<"app">>,<<"nimble_pool">>},
   {<<"optional">>,false},
   {<<"requirement">>,<<"~> 1.0">>},
   {<<"repository">>,<<"hexpm">>}]]}.
{<<"build_tools">>,[<<"mix">>,<<"make">>]}.

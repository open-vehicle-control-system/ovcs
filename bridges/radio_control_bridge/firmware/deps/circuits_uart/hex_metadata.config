{<<"links">>,
 [{<<"GitHub">>,<<"https://github.com/elixir-circuits/circuits_uart">>}]}.
{<<"name">>,<<"circuits_uart">>}.
{<<"version">>,<<"1.5.3">>}.
{<<"description">>,<<"Discover and use UARTs and serial ports in Elixir">>}.
{<<"elixir">>,<<"~> 1.6">>}.
{<<"app">>,<<"circuits_uart">>}.
{<<"files">>,
 [<<"lib">>,<<"lib/circuits_uart.ex">>,<<"lib/uart">>,
  <<"lib/uart/enumerator.ex">>,<<"lib/uart/framing">>,
  <<"lib/uart/framing/line.ex">>,<<"lib/uart/framing/none.ex">>,
  <<"lib/uart/framing/fourbyte.ex">>,<<"lib/uart/framing.ex">>,
  <<"src/circuits_uart.c">>,<<"src/debug_tests.c">>,<<"src/erlcmd.c">>,
  <<"src/erlcmd.h">>,<<"src/uart_comm.c">>,<<"src/uart_comm.h">>,
  <<"src/uart_comm_unix.c">>,<<"src/uart_comm_win.c">>,<<"src/uart_enum.c">>,
  <<"src/uart_enum.h">>,<<"src/uart_enum_linux.c">>,<<"src/uart_enum_osx.c">>,
  <<"src/uart_enum_win.c">>,<<"src/util.c">>,<<"src/util.h">>,
  <<"src/ei_copy/decode_atom.c">>,<<"src/ei_copy/decode_big.c">>,
  <<"src/ei_copy/decode_bignum.c">>,<<"src/ei_copy/decode_binary.c">>,
  <<"src/ei_copy/decode_boolean.c">>,<<"src/ei_copy/decode_char.c">>,
  <<"src/ei_copy/decode_double.c">>,<<"src/ei_copy/decode_fun.c">>,
  <<"src/ei_copy/decode_intlist.c">>,<<"src/ei_copy/decode_list_header.c">>,
  <<"src/ei_copy/decode_long.c">>,<<"src/ei_copy/decode_longlong.c">>,
  <<"src/ei_copy/decode_pid.c">>,<<"src/ei_copy/decode_port.c">>,
  <<"src/ei_copy/decode_ref.c">>,<<"src/ei_copy/decode_skip.c">>,
  <<"src/ei_copy/decode_skip.h">>,<<"src/ei_copy/decode_string.c">>,
  <<"src/ei_copy/decode_trace.c">>,<<"src/ei_copy/decode_tuple_header.c">>,
  <<"src/ei_copy/decode_ulong.c">>,<<"src/ei_copy/decode_ulonglong.c">>,
  <<"src/ei_copy/decode_version.c">>,<<"src/ei_copy/ei.h">>,
  <<"src/ei_copy/ei_decode_term.c">>,<<"src/ei_copy/ei_decode_term.h">>,
  <<"src/ei_copy/ei_malloc.c">>,<<"src/ei_copy/ei_malloc.h">>,
  <<"src/ei_copy/ei_printterm.c">>,<<"src/ei_copy/ei_printterm.h">>,
  <<"src/ei_copy/ei_x_encode.c">>,<<"src/ei_copy/ei_x_encode.h">>,
  <<"src/ei_copy/eicode.h">>,<<"src/ei_copy/eidef.h">>,
  <<"src/ei_copy/eiext.h">>,<<"src/ei_copy/encode_atom.c">>,
  <<"src/ei_copy/encode_big.c">>,<<"src/ei_copy/encode_bignum.c">>,
  <<"src/ei_copy/encode_binary.c">>,<<"src/ei_copy/encode_boolean.c">>,
  <<"src/ei_copy/encode_char.c">>,<<"src/ei_copy/encode_double.c">>,
  <<"src/ei_copy/encode_fun.c">>,<<"src/ei_copy/encode_list_header.c">>,
  <<"src/ei_copy/encode_long.c">>,<<"src/ei_copy/encode_longlong.c">>,
  <<"src/ei_copy/encode_pid.c">>,<<"src/ei_copy/encode_port.c">>,
  <<"src/ei_copy/encode_ref.c">>,<<"src/ei_copy/encode_string.c">>,
  <<"src/ei_copy/encode_trace.c">>,<<"src/ei_copy/encode_tuple_header.c">>,
  <<"src/ei_copy/encode_ulong.c">>,<<"src/ei_copy/encode_ulonglong.c">>,
  <<"src/ei_copy/encode_version.c">>,<<"src/ei_copy/get_type.c">>,
  <<"src/ei_copy/putget.h">>,<<"src/Makefile">>,<<"test">>,
  <<"test/uart_test.exs">>,<<"test/framing_test.exs">>,
  <<"test/framing_line_test.exs">>,<<"test/framing_fourbyte_test.exs">>,
  <<"test/uartless_test.exs">>,<<"test/test_helper.exs">>,
  <<"test/hw_signals_test.exs">>,<<"test/basic_uart_test.exs">>,<<"mix.exs">>,
  <<"README.md">>,<<"LICENSE">>,<<"CHANGELOG.md">>]}.
{<<"licenses">>,[<<"Apache-2.0">>]}.
{<<"requirements">>,
 [[{<<"name">>,<<"elixir_make">>},
   {<<"app">>,<<"elixir_make">>},
   {<<"optional">>,false},
   {<<"requirement">>,<<"~> 0.6">>},
   {<<"repository">>,<<"hexpm">>}]]}.
{<<"build_tools">>,[<<"mix">>]}.

---
bitrate: 500000
emitted_frames:
  - name: vehicle_status # Validated
    id: 0x38B
    frequency: 10 # Not verified, 20ms mentionned in comment
    signals:
      - name: crc # lut_checksum(dat, 8, crc8_lut_1d);
        kind: checksum
        value_start: 0
        value_length: 8
      - name: counter # cycling between 0 to 15 (0x0F)
        kind: integer
        value_start: 8
        value_length: 8
      - name: filler1 # P_EST_MAX + 2 zeros in Ocelot
        kind: static
        value: 0x00
        value_start: 16
        value_length: 16

  - name: brake_request
    id: 0x38C
    frequency: 10 # Frequency unknown and undocummented
    signals:
      - name: crc
        kind: checksum
        value_start: 0
        value_length: 8
      - name: counter
        kind: integer
        value_start: 8
        value_length: 8
      # Int, 32256 (0x7e00) by default
      # 0x7e00 = min rod position = 32256, 0x8200 = max brake (not sure) = 33280
      # Set to default when driver_brake_applied
      - name: q_target_ext # quantity target external? target break level based on external factors?
        value_start: 16
        value_length: 16
        kind: integer
  - name: vehicle_alive # Validated
    id: 0x38D
    frequency: 10 # Frequency unknown and undocummented
    signals:
      - name: crc
        kind: checksum
        value_start: 0
        value_length: 8
      - name: counter
        kind: integer
        value_start: 8
        value_length: 8
      - name: filler1
        kind: static
        value: 0x00
        value_start: 16
        value_length: 32
      - name: filler2
        kind: static
        value: 0x20
        value_start: 48
        value_length: 8
  - name: test_esp_status
    id: 0x91
    frequency: 10
    signals:
      - name: static
        kind: static
        value: 0x00
        value_start: 0
        value_length: 64
  - name: test_esp_b
    id: 0x9B
    frequency: 10
    signals:
      - name: static
        kind: static
        value: 0x00
        value_start: 0
        value_length: 64
  - name: test_esp_info
    id: 0x328
    frequency: 10
    signals:
      - name: static
        kind: static
        value: 0x00
        value_start: 0
        value_length: 64
        
received_frames:
  - name: rod_status
    id: 0x38E
    signals:
      - name: crc
        kind: integer
        value_start: 0
        value_length: 8
      - name: counter
        kind: integer
        value_start: 8
        value_length: 8
      - name: output_rod_target # The brake is considered to be applied when output_rod_target is greater than 575mm or brake_status.driver_brake_applied is true (or brake_status.brake_sensor_fault is true to assume worst case scenario)
        unit: mm
        value_start: 24
        value_length: 10
  - name: brake_status
    id: 0x38F
    signals:
      - name: crc
        kind: integer
        value_start: 0
        value_length: 8
      - name: counter
        kind: integer
        value_start: 8
        value_length: 8
      - name: driver_brake_applied
        kind: enum
        value_start: 16
        value_length: 1
        mapping:
          0x00: False
          0x01: True
      - name: brake_sensor_fault
        kind: enum
        value_start: 17
        value_length: 1
        mapping:
          0x00: False
          0x01: True
      - name: ibooster_error
        kind: enum
        value_start: 19
        value_length: 3
        mapping:
          0x07: false
          0x00: true # To be refined with concrete values, we only know that 0x07 means "ok"
  - name: ibooster_status
    id: 0x39D
    signals:
      - name: status
        kind: enum
        value_start: 9
        value_length: 3
        mapping:
          0x00: 'off'
          0x01: init
          0x02: failure
          0x03: diagnostic
          0x04: active_good_check
          0x05: ready
          0x06: actuation
      - name: driver_brake_apply
        kind: enum
        value_start: 22
        value_length: 2
        mapping:
          0x00: not_init_or_off
          0x01: brakes_not_applied
          0x02: driver_applying_brake
          0x03: fault
